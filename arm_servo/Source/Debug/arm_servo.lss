
arm_servo.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000016  00800100  0000077c  00000810  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000077c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800116  00800116  00000826  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000826  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000078  00000000  00000000  00000882  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000545  00000000  00000000  000008fa  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000002d5  00000000  00000000  00000e3f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000020c  00000000  00000000  00001114  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000138  00000000  00000000  00001320  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003b2  00000000  00000000  00001458  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000002b1  00000000  00000000  0000180a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000080  00000000  00000000  00001abb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 75 00 	jmp	0xea	; 0xea <__vector_21>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec e7       	ldi	r30, 0x7C	; 124
  7c:	f7 e0       	ldi	r31, 0x07	; 7
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 31       	cpi	r26, 0x16	; 22
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a6 e1       	ldi	r26, 0x16	; 22
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a8 31       	cpi	r26, 0x18	; 24
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 e5 00 	call	0x1ca	; 0x1ca <main>
  9e:	0c 94 bc 03 	jmp	0x778	; 0x778 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <_Z10USART_Initj>:
	return (((((FOSC * 10) / (16L * baud)) + 5) / 10) - 1);
}

void USART_Init(unsigned int ubrr) {
	/*Set baud rate */
	UBRR0H = (unsigned char)(ubrr>>8);
  a6:	90 93 c5 00 	sts	0x00C5, r25
	UBRR0L = (unsigned char)ubrr;
  aa:	80 93 c4 00 	sts	0x00C4, r24
	//Enable receiver and transmitter */
	UCSR0B = (1 << RXEN0)|(1 << TXEN0);
  ae:	88 e1       	ldi	r24, 0x18	; 24
  b0:	80 93 c1 00 	sts	0x00C1, r24
	/* Set frame format: 8data, 1 stop bit */
	UCSR0C = (0 << USBS0)|(3 << UCSZ00);
  b4:	86 e0       	ldi	r24, 0x06	; 6
  b6:	80 93 c2 00 	sts	0x00C2, r24
  ba:	08 95       	ret

000000bc <_Z14USART_Sendbyteh>:
}

void USART_Sendbyte(unsigned char data) {
	while (!(UCSR0A & (1 << UDRE0))); // wait
  bc:	e0 ec       	ldi	r30, 0xC0	; 192
  be:	f0 e0       	ldi	r31, 0x00	; 0
  c0:	90 81       	ld	r25, Z
  c2:	95 ff       	sbrs	r25, 5
  c4:	fd cf       	rjmp	.-6      	; 0xc0 <_Z14USART_Sendbyteh+0x4>
	UDR0 = char(data);
  c6:	80 93 c6 00 	sts	0x00C6, r24
  ca:	08 95       	ret

000000cc <_Z17USART_Send_stringPKc>:
}

void USART_Send_string(const char *str) {
  cc:	cf 93       	push	r28
  ce:	df 93       	push	r29
  d0:	ec 01       	movw	r28, r24
	while (*str) 
  d2:	88 81       	ld	r24, Y
  d4:	88 23       	and	r24, r24
  d6:	31 f0       	breq	.+12     	; 0xe4 <_Z17USART_Send_stringPKc+0x18>
  d8:	21 96       	adiw	r28, 0x01	; 1
		USART_Sendbyte(*str++);	
  da:	0e 94 5e 00 	call	0xbc	; 0xbc <_Z14USART_Sendbyteh>
	while (!(UCSR0A & (1 << UDRE0))); // wait
	UDR0 = char(data);
}

void USART_Send_string(const char *str) {
	while (*str) 
  de:	89 91       	ld	r24, Y+
  e0:	81 11       	cpse	r24, r1
  e2:	fb cf       	rjmp	.-10     	; 0xda <_Z17USART_Send_stringPKc+0xe>
		USART_Sendbyte(*str++);	
}
  e4:	df 91       	pop	r29
  e6:	cf 91       	pop	r28
  e8:	08 95       	ret

000000ea <__vector_21>:

volatile uint8_t analogLow, analogHigh;

//------------------INTERRUPT SERVICE ROUTINES

ISR(ADC_vect) {
  ea:	1f 92       	push	r1
  ec:	0f 92       	push	r0
  ee:	0f b6       	in	r0, 0x3f	; 63
  f0:	0f 92       	push	r0
  f2:	11 24       	eor	r1, r1
  f4:	8f 93       	push	r24
	
	analogLow = ADCL;
  f6:	80 91 78 00 	lds	r24, 0x0078
  fa:	80 93 17 01 	sts	0x0117, r24
	analogHigh = ADCH;
  fe:	80 91 79 00 	lds	r24, 0x0079
 102:	80 93 16 01 	sts	0x0116, r24
}
 106:	8f 91       	pop	r24
 108:	0f 90       	pop	r0
 10a:	0f be       	out	0x3f, r0	; 63
 10c:	0f 90       	pop	r0
 10e:	1f 90       	pop	r1
 110:	18 95       	reti

00000112 <_ZN6Analog4testEv>:
	
		static bool conversionComplete () { return isBitSet(ADSC, &ADCSRA)? false : true; }
		
		static uint16_t getValue () { return ((analogHigh << 2) | (analogLow >> 6)); }
		
		static void test () {
 112:	cf 93       	push	r28
 114:	df 93       	push	r29
 116:	cd b7       	in	r28, 0x3d	; 61
 118:	de b7       	in	r29, 0x3e	; 62
 11a:	64 97       	sbiw	r28, 0x14	; 20
 11c:	0f b6       	in	r0, 0x3f	; 63
 11e:	f8 94       	cli
 120:	de bf       	out	0x3e, r29	; 62
 122:	0f be       	out	0x3f, r0	; 63
 124:	cd bf       	out	0x3d, r28	; 61
			
			// selects PORTC0 (Nano: A0) and outputs ADC value
		
			sei(); // enable interrupts
 126:	78 94       	sei
//------STATIC FUNCTIONS
	
		static void selectChannel (uint8_t n) {
		
			setBitTo(n, 0, &PORTC);
			ADMUX  = 0b01100000 | n; // port n ADC selected
 128:	0f 2e       	mov	r0, r31
 12a:	fc e7       	ldi	r31, 0x7C	; 124
 12c:	8f 2e       	mov	r8, r31
 12e:	91 2c       	mov	r9, r1
 130:	f0 2d       	mov	r31, r0
 132:	0f 2e       	mov	r0, r31
 134:	f0 e6       	ldi	r31, 0x60	; 96
 136:	6f 2e       	mov	r6, r31
 138:	f0 2d       	mov	r31, r0
			ADCSRA = 0b10001011; // on, 2x clock
 13a:	0f 2e       	mov	r0, r31
 13c:	fa e7       	ldi	r31, 0x7A	; 122
 13e:	ef 2e       	mov	r14, r31
 140:	f1 2c       	mov	r15, r1
 142:	f0 2d       	mov	r31, r0
 144:	0f 2e       	mov	r0, r31
 146:	fb e8       	ldi	r31, 0x8B	; 139
 148:	7f 2e       	mov	r7, r31
 14a:	f0 2d       	mov	r31, r0
			ADCSRB = 0b00000000; // free running
 14c:	0f 2e       	mov	r0, r31
 14e:	fb e7       	ldi	r31, 0x7B	; 123
 150:	af 2e       	mov	r10, r31
 152:	b1 2c       	mov	r11, r1
 154:	f0 2d       	mov	r31, r0
				Analog::selectChannel(0);
				Analog::startConversion();
							
				// may need some setup time if only calling once
			
				sprintf(str, "ADC value: %u\n", Analog::getValue());
 156:	0f 2e       	mov	r0, r31
 158:	f7 e0       	ldi	r31, 0x07	; 7
 15a:	cf 2e       	mov	r12, r31
 15c:	f1 e0       	ldi	r31, 0x01	; 1
 15e:	df 2e       	mov	r13, r31
 160:	f0 2d       	mov	r31, r0
 162:	8e 01       	movw	r16, r28
 164:	0f 5f       	subi	r16, 0xFF	; 255
 166:	1f 4f       	sbci	r17, 0xFF	; 255
}

//------------------FUNCTIONS

void setBitTo(uint8_t bit, uint8_t value, volatile uint8_t *reg) {
	*reg = (value << bit) | (*reg & (0xff - (1 << bit)));
 168:	40 98       	cbi	0x08, 0	; 8
//------STATIC FUNCTIONS
	
		static void selectChannel (uint8_t n) {
		
			setBitTo(n, 0, &PORTC);
			ADMUX  = 0b01100000 | n; // port n ADC selected
 16a:	f4 01       	movw	r30, r8
 16c:	60 82       	st	Z, r6
			ADCSRA = 0b10001011; // on, 2x clock
 16e:	f7 01       	movw	r30, r14
 170:	70 82       	st	Z, r7
			ADCSRB = 0b00000000; // free running
 172:	f5 01       	movw	r30, r10
 174:	10 82       	st	Z, r1
}

//------------------FUNCTIONS

void setBitTo(uint8_t bit, uint8_t value, volatile uint8_t *reg) {
	*reg = (value << bit) | (*reg & (0xff - (1 << bit)));
 176:	f7 01       	movw	r30, r14
 178:	80 81       	ld	r24, Z
 17a:	80 64       	ori	r24, 0x40	; 64
 17c:	80 83       	st	Z, r24
	
		static void startConversion () { setBitTo(ADSC, 1, &ADCSRA); }
	
		static bool conversionComplete () { return isBitSet(ADSC, &ADCSRA)? false : true; }
		
		static uint16_t getValue () { return ((analogHigh << 2) | (analogLow >> 6)); }
 17e:	80 91 16 01 	lds	r24, 0x0116
 182:	20 91 17 01 	lds	r18, 0x0117
 186:	30 e0       	ldi	r19, 0x00	; 0
 188:	02 2e       	mov	r0, r18
 18a:	23 2f       	mov	r18, r19
 18c:	00 0c       	add	r0, r0
 18e:	22 1f       	adc	r18, r18
 190:	33 0b       	sbc	r19, r19
 192:	00 0c       	add	r0, r0
 194:	22 1f       	adc	r18, r18
 196:	33 1f       	adc	r19, r19
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	88 0f       	add	r24, r24
 19c:	99 1f       	adc	r25, r25
 19e:	88 0f       	add	r24, r24
 1a0:	99 1f       	adc	r25, r25
 1a2:	82 2b       	or	r24, r18
 1a4:	93 2b       	or	r25, r19
				Analog::selectChannel(0);
				Analog::startConversion();
							
				// may need some setup time if only calling once
			
				sprintf(str, "ADC value: %u\n", Analog::getValue());
 1a6:	9f 93       	push	r25
 1a8:	8f 93       	push	r24
 1aa:	df 92       	push	r13
 1ac:	cf 92       	push	r12
 1ae:	1f 93       	push	r17
 1b0:	0f 93       	push	r16
 1b2:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <sprintf>
				USART_Send_string(str);
 1b6:	c8 01       	movw	r24, r16
 1b8:	0e 94 66 00 	call	0xcc	; 0xcc <_Z17USART_Send_stringPKc>
 1bc:	0f 90       	pop	r0
 1be:	0f 90       	pop	r0
 1c0:	0f 90       	pop	r0
 1c2:	0f 90       	pop	r0
 1c4:	0f 90       	pop	r0
 1c6:	0f 90       	pop	r0
 1c8:	cf cf       	rjmp	.-98     	; 0x168 <_ZN6Analog4testEv+0x56>

000001ca <main>:

//------------------MAIN

int main(void) {
	
	USART_Init(convertBaud(COM_SPEED));
 1ca:	80 e1       	ldi	r24, 0x10	; 16
 1cc:	90 e0       	ldi	r25, 0x00	; 0
 1ce:	0e 94 53 00 	call	0xa6	; 0xa6 <_Z10USART_Initj>
	Analog::test();
 1d2:	0e 94 89 00 	call	0x112	; 0x112 <_ZN6Analog4testEv>

000001d6 <sprintf>:
 1d6:	ae e0       	ldi	r26, 0x0E	; 14
 1d8:	b0 e0       	ldi	r27, 0x00	; 0
 1da:	e1 ef       	ldi	r30, 0xF1	; 241
 1dc:	f0 e0       	ldi	r31, 0x00	; 0
 1de:	0c 94 93 03 	jmp	0x726	; 0x726 <__prologue_saves__+0x1c>
 1e2:	0d 89       	ldd	r16, Y+21	; 0x15
 1e4:	1e 89       	ldd	r17, Y+22	; 0x16
 1e6:	86 e0       	ldi	r24, 0x06	; 6
 1e8:	8c 83       	std	Y+4, r24	; 0x04
 1ea:	1a 83       	std	Y+2, r17	; 0x02
 1ec:	09 83       	std	Y+1, r16	; 0x01
 1ee:	8f ef       	ldi	r24, 0xFF	; 255
 1f0:	9f e7       	ldi	r25, 0x7F	; 127
 1f2:	9e 83       	std	Y+6, r25	; 0x06
 1f4:	8d 83       	std	Y+5, r24	; 0x05
 1f6:	ae 01       	movw	r20, r28
 1f8:	47 5e       	subi	r20, 0xE7	; 231
 1fa:	5f 4f       	sbci	r21, 0xFF	; 255
 1fc:	6f 89       	ldd	r22, Y+23	; 0x17
 1fe:	78 8d       	ldd	r23, Y+24	; 0x18
 200:	ce 01       	movw	r24, r28
 202:	01 96       	adiw	r24, 0x01	; 1
 204:	0e 94 0d 01 	call	0x21a	; 0x21a <vfprintf>
 208:	ef 81       	ldd	r30, Y+7	; 0x07
 20a:	f8 85       	ldd	r31, Y+8	; 0x08
 20c:	e0 0f       	add	r30, r16
 20e:	f1 1f       	adc	r31, r17
 210:	10 82       	st	Z, r1
 212:	2e 96       	adiw	r28, 0x0e	; 14
 214:	e4 e0       	ldi	r30, 0x04	; 4
 216:	0c 94 af 03 	jmp	0x75e	; 0x75e <__epilogue_restores__+0x1c>

0000021a <vfprintf>:
 21a:	ac e0       	ldi	r26, 0x0C	; 12
 21c:	b0 e0       	ldi	r27, 0x00	; 0
 21e:	e3 e1       	ldi	r30, 0x13	; 19
 220:	f1 e0       	ldi	r31, 0x01	; 1
 222:	0c 94 85 03 	jmp	0x70a	; 0x70a <__prologue_saves__>
 226:	7c 01       	movw	r14, r24
 228:	6b 01       	movw	r12, r22
 22a:	8a 01       	movw	r16, r20
 22c:	fc 01       	movw	r30, r24
 22e:	17 82       	std	Z+7, r1	; 0x07
 230:	16 82       	std	Z+6, r1	; 0x06
 232:	83 81       	ldd	r24, Z+3	; 0x03
 234:	81 ff       	sbrs	r24, 1
 236:	bd c1       	rjmp	.+890    	; 0x5b2 <vfprintf+0x398>
 238:	ce 01       	movw	r24, r28
 23a:	01 96       	adiw	r24, 0x01	; 1
 23c:	4c 01       	movw	r8, r24
 23e:	f7 01       	movw	r30, r14
 240:	93 81       	ldd	r25, Z+3	; 0x03
 242:	f6 01       	movw	r30, r12
 244:	93 fd       	sbrc	r25, 3
 246:	85 91       	lpm	r24, Z+
 248:	93 ff       	sbrs	r25, 3
 24a:	81 91       	ld	r24, Z+
 24c:	6f 01       	movw	r12, r30
 24e:	88 23       	and	r24, r24
 250:	09 f4       	brne	.+2      	; 0x254 <vfprintf+0x3a>
 252:	ab c1       	rjmp	.+854    	; 0x5aa <vfprintf+0x390>
 254:	85 32       	cpi	r24, 0x25	; 37
 256:	39 f4       	brne	.+14     	; 0x266 <vfprintf+0x4c>
 258:	93 fd       	sbrc	r25, 3
 25a:	85 91       	lpm	r24, Z+
 25c:	93 ff       	sbrs	r25, 3
 25e:	81 91       	ld	r24, Z+
 260:	6f 01       	movw	r12, r30
 262:	85 32       	cpi	r24, 0x25	; 37
 264:	29 f4       	brne	.+10     	; 0x270 <vfprintf+0x56>
 266:	b7 01       	movw	r22, r14
 268:	90 e0       	ldi	r25, 0x00	; 0
 26a:	0e 94 f5 02 	call	0x5ea	; 0x5ea <fputc>
 26e:	e7 cf       	rjmp	.-50     	; 0x23e <vfprintf+0x24>
 270:	51 2c       	mov	r5, r1
 272:	31 2c       	mov	r3, r1
 274:	20 e0       	ldi	r18, 0x00	; 0
 276:	20 32       	cpi	r18, 0x20	; 32
 278:	a0 f4       	brcc	.+40     	; 0x2a2 <vfprintf+0x88>
 27a:	8b 32       	cpi	r24, 0x2B	; 43
 27c:	69 f0       	breq	.+26     	; 0x298 <vfprintf+0x7e>
 27e:	30 f4       	brcc	.+12     	; 0x28c <vfprintf+0x72>
 280:	80 32       	cpi	r24, 0x20	; 32
 282:	59 f0       	breq	.+22     	; 0x29a <vfprintf+0x80>
 284:	83 32       	cpi	r24, 0x23	; 35
 286:	69 f4       	brne	.+26     	; 0x2a2 <vfprintf+0x88>
 288:	20 61       	ori	r18, 0x10	; 16
 28a:	2c c0       	rjmp	.+88     	; 0x2e4 <vfprintf+0xca>
 28c:	8d 32       	cpi	r24, 0x2D	; 45
 28e:	39 f0       	breq	.+14     	; 0x29e <vfprintf+0x84>
 290:	80 33       	cpi	r24, 0x30	; 48
 292:	39 f4       	brne	.+14     	; 0x2a2 <vfprintf+0x88>
 294:	21 60       	ori	r18, 0x01	; 1
 296:	26 c0       	rjmp	.+76     	; 0x2e4 <vfprintf+0xca>
 298:	22 60       	ori	r18, 0x02	; 2
 29a:	24 60       	ori	r18, 0x04	; 4
 29c:	23 c0       	rjmp	.+70     	; 0x2e4 <vfprintf+0xca>
 29e:	28 60       	ori	r18, 0x08	; 8
 2a0:	21 c0       	rjmp	.+66     	; 0x2e4 <vfprintf+0xca>
 2a2:	27 fd       	sbrc	r18, 7
 2a4:	27 c0       	rjmp	.+78     	; 0x2f4 <vfprintf+0xda>
 2a6:	30 ed       	ldi	r19, 0xD0	; 208
 2a8:	38 0f       	add	r19, r24
 2aa:	3a 30       	cpi	r19, 0x0A	; 10
 2ac:	78 f4       	brcc	.+30     	; 0x2cc <vfprintf+0xb2>
 2ae:	26 ff       	sbrs	r18, 6
 2b0:	06 c0       	rjmp	.+12     	; 0x2be <vfprintf+0xa4>
 2b2:	fa e0       	ldi	r31, 0x0A	; 10
 2b4:	5f 9e       	mul	r5, r31
 2b6:	30 0d       	add	r19, r0
 2b8:	11 24       	eor	r1, r1
 2ba:	53 2e       	mov	r5, r19
 2bc:	13 c0       	rjmp	.+38     	; 0x2e4 <vfprintf+0xca>
 2be:	8a e0       	ldi	r24, 0x0A	; 10
 2c0:	38 9e       	mul	r3, r24
 2c2:	30 0d       	add	r19, r0
 2c4:	11 24       	eor	r1, r1
 2c6:	33 2e       	mov	r3, r19
 2c8:	20 62       	ori	r18, 0x20	; 32
 2ca:	0c c0       	rjmp	.+24     	; 0x2e4 <vfprintf+0xca>
 2cc:	8e 32       	cpi	r24, 0x2E	; 46
 2ce:	21 f4       	brne	.+8      	; 0x2d8 <vfprintf+0xbe>
 2d0:	26 fd       	sbrc	r18, 6
 2d2:	6b c1       	rjmp	.+726    	; 0x5aa <vfprintf+0x390>
 2d4:	20 64       	ori	r18, 0x40	; 64
 2d6:	06 c0       	rjmp	.+12     	; 0x2e4 <vfprintf+0xca>
 2d8:	8c 36       	cpi	r24, 0x6C	; 108
 2da:	11 f4       	brne	.+4      	; 0x2e0 <vfprintf+0xc6>
 2dc:	20 68       	ori	r18, 0x80	; 128
 2de:	02 c0       	rjmp	.+4      	; 0x2e4 <vfprintf+0xca>
 2e0:	88 36       	cpi	r24, 0x68	; 104
 2e2:	41 f4       	brne	.+16     	; 0x2f4 <vfprintf+0xda>
 2e4:	f6 01       	movw	r30, r12
 2e6:	93 fd       	sbrc	r25, 3
 2e8:	85 91       	lpm	r24, Z+
 2ea:	93 ff       	sbrs	r25, 3
 2ec:	81 91       	ld	r24, Z+
 2ee:	6f 01       	movw	r12, r30
 2f0:	81 11       	cpse	r24, r1
 2f2:	c1 cf       	rjmp	.-126    	; 0x276 <vfprintf+0x5c>
 2f4:	98 2f       	mov	r25, r24
 2f6:	9f 7d       	andi	r25, 0xDF	; 223
 2f8:	95 54       	subi	r25, 0x45	; 69
 2fa:	93 30       	cpi	r25, 0x03	; 3
 2fc:	28 f4       	brcc	.+10     	; 0x308 <vfprintf+0xee>
 2fe:	0c 5f       	subi	r16, 0xFC	; 252
 300:	1f 4f       	sbci	r17, 0xFF	; 255
 302:	ff e3       	ldi	r31, 0x3F	; 63
 304:	f9 83       	std	Y+1, r31	; 0x01
 306:	0d c0       	rjmp	.+26     	; 0x322 <vfprintf+0x108>
 308:	83 36       	cpi	r24, 0x63	; 99
 30a:	31 f0       	breq	.+12     	; 0x318 <vfprintf+0xfe>
 30c:	83 37       	cpi	r24, 0x73	; 115
 30e:	71 f0       	breq	.+28     	; 0x32c <vfprintf+0x112>
 310:	83 35       	cpi	r24, 0x53	; 83
 312:	09 f0       	breq	.+2      	; 0x316 <vfprintf+0xfc>
 314:	5b c0       	rjmp	.+182    	; 0x3cc <vfprintf+0x1b2>
 316:	22 c0       	rjmp	.+68     	; 0x35c <vfprintf+0x142>
 318:	f8 01       	movw	r30, r16
 31a:	80 81       	ld	r24, Z
 31c:	89 83       	std	Y+1, r24	; 0x01
 31e:	0e 5f       	subi	r16, 0xFE	; 254
 320:	1f 4f       	sbci	r17, 0xFF	; 255
 322:	44 24       	eor	r4, r4
 324:	43 94       	inc	r4
 326:	51 2c       	mov	r5, r1
 328:	54 01       	movw	r10, r8
 32a:	15 c0       	rjmp	.+42     	; 0x356 <vfprintf+0x13c>
 32c:	38 01       	movw	r6, r16
 32e:	f2 e0       	ldi	r31, 0x02	; 2
 330:	6f 0e       	add	r6, r31
 332:	71 1c       	adc	r7, r1
 334:	f8 01       	movw	r30, r16
 336:	a0 80       	ld	r10, Z
 338:	b1 80       	ldd	r11, Z+1	; 0x01
 33a:	26 ff       	sbrs	r18, 6
 33c:	03 c0       	rjmp	.+6      	; 0x344 <vfprintf+0x12a>
 33e:	65 2d       	mov	r22, r5
 340:	70 e0       	ldi	r23, 0x00	; 0
 342:	02 c0       	rjmp	.+4      	; 0x348 <vfprintf+0x12e>
 344:	6f ef       	ldi	r22, 0xFF	; 255
 346:	7f ef       	ldi	r23, 0xFF	; 255
 348:	c5 01       	movw	r24, r10
 34a:	2c 87       	std	Y+12, r18	; 0x0c
 34c:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <strnlen>
 350:	2c 01       	movw	r4, r24
 352:	83 01       	movw	r16, r6
 354:	2c 85       	ldd	r18, Y+12	; 0x0c
 356:	2f 77       	andi	r18, 0x7F	; 127
 358:	22 2e       	mov	r2, r18
 35a:	17 c0       	rjmp	.+46     	; 0x38a <vfprintf+0x170>
 35c:	38 01       	movw	r6, r16
 35e:	f2 e0       	ldi	r31, 0x02	; 2
 360:	6f 0e       	add	r6, r31
 362:	71 1c       	adc	r7, r1
 364:	f8 01       	movw	r30, r16
 366:	a0 80       	ld	r10, Z
 368:	b1 80       	ldd	r11, Z+1	; 0x01
 36a:	26 ff       	sbrs	r18, 6
 36c:	03 c0       	rjmp	.+6      	; 0x374 <vfprintf+0x15a>
 36e:	65 2d       	mov	r22, r5
 370:	70 e0       	ldi	r23, 0x00	; 0
 372:	02 c0       	rjmp	.+4      	; 0x378 <vfprintf+0x15e>
 374:	6f ef       	ldi	r22, 0xFF	; 255
 376:	7f ef       	ldi	r23, 0xFF	; 255
 378:	c5 01       	movw	r24, r10
 37a:	2c 87       	std	Y+12, r18	; 0x0c
 37c:	0e 94 df 02 	call	0x5be	; 0x5be <strnlen_P>
 380:	2c 01       	movw	r4, r24
 382:	2c 85       	ldd	r18, Y+12	; 0x0c
 384:	20 68       	ori	r18, 0x80	; 128
 386:	22 2e       	mov	r2, r18
 388:	83 01       	movw	r16, r6
 38a:	23 fc       	sbrc	r2, 3
 38c:	1b c0       	rjmp	.+54     	; 0x3c4 <vfprintf+0x1aa>
 38e:	83 2d       	mov	r24, r3
 390:	90 e0       	ldi	r25, 0x00	; 0
 392:	48 16       	cp	r4, r24
 394:	59 06       	cpc	r5, r25
 396:	b0 f4       	brcc	.+44     	; 0x3c4 <vfprintf+0x1aa>
 398:	b7 01       	movw	r22, r14
 39a:	80 e2       	ldi	r24, 0x20	; 32
 39c:	90 e0       	ldi	r25, 0x00	; 0
 39e:	0e 94 f5 02 	call	0x5ea	; 0x5ea <fputc>
 3a2:	3a 94       	dec	r3
 3a4:	f4 cf       	rjmp	.-24     	; 0x38e <vfprintf+0x174>
 3a6:	f5 01       	movw	r30, r10
 3a8:	27 fc       	sbrc	r2, 7
 3aa:	85 91       	lpm	r24, Z+
 3ac:	27 fe       	sbrs	r2, 7
 3ae:	81 91       	ld	r24, Z+
 3b0:	5f 01       	movw	r10, r30
 3b2:	b7 01       	movw	r22, r14
 3b4:	90 e0       	ldi	r25, 0x00	; 0
 3b6:	0e 94 f5 02 	call	0x5ea	; 0x5ea <fputc>
 3ba:	31 10       	cpse	r3, r1
 3bc:	3a 94       	dec	r3
 3be:	f1 e0       	ldi	r31, 0x01	; 1
 3c0:	4f 1a       	sub	r4, r31
 3c2:	51 08       	sbc	r5, r1
 3c4:	41 14       	cp	r4, r1
 3c6:	51 04       	cpc	r5, r1
 3c8:	71 f7       	brne	.-36     	; 0x3a6 <vfprintf+0x18c>
 3ca:	e5 c0       	rjmp	.+458    	; 0x596 <vfprintf+0x37c>
 3cc:	84 36       	cpi	r24, 0x64	; 100
 3ce:	11 f0       	breq	.+4      	; 0x3d4 <vfprintf+0x1ba>
 3d0:	89 36       	cpi	r24, 0x69	; 105
 3d2:	39 f5       	brne	.+78     	; 0x422 <vfprintf+0x208>
 3d4:	f8 01       	movw	r30, r16
 3d6:	27 ff       	sbrs	r18, 7
 3d8:	07 c0       	rjmp	.+14     	; 0x3e8 <vfprintf+0x1ce>
 3da:	60 81       	ld	r22, Z
 3dc:	71 81       	ldd	r23, Z+1	; 0x01
 3de:	82 81       	ldd	r24, Z+2	; 0x02
 3e0:	93 81       	ldd	r25, Z+3	; 0x03
 3e2:	0c 5f       	subi	r16, 0xFC	; 252
 3e4:	1f 4f       	sbci	r17, 0xFF	; 255
 3e6:	08 c0       	rjmp	.+16     	; 0x3f8 <vfprintf+0x1de>
 3e8:	60 81       	ld	r22, Z
 3ea:	71 81       	ldd	r23, Z+1	; 0x01
 3ec:	88 27       	eor	r24, r24
 3ee:	77 fd       	sbrc	r23, 7
 3f0:	80 95       	com	r24
 3f2:	98 2f       	mov	r25, r24
 3f4:	0e 5f       	subi	r16, 0xFE	; 254
 3f6:	1f 4f       	sbci	r17, 0xFF	; 255
 3f8:	2f 76       	andi	r18, 0x6F	; 111
 3fa:	b2 2e       	mov	r11, r18
 3fc:	97 ff       	sbrs	r25, 7
 3fe:	09 c0       	rjmp	.+18     	; 0x412 <vfprintf+0x1f8>
 400:	90 95       	com	r25
 402:	80 95       	com	r24
 404:	70 95       	com	r23
 406:	61 95       	neg	r22
 408:	7f 4f       	sbci	r23, 0xFF	; 255
 40a:	8f 4f       	sbci	r24, 0xFF	; 255
 40c:	9f 4f       	sbci	r25, 0xFF	; 255
 40e:	20 68       	ori	r18, 0x80	; 128
 410:	b2 2e       	mov	r11, r18
 412:	2a e0       	ldi	r18, 0x0A	; 10
 414:	30 e0       	ldi	r19, 0x00	; 0
 416:	a4 01       	movw	r20, r8
 418:	0e 94 27 03 	call	0x64e	; 0x64e <__ultoa_invert>
 41c:	a8 2e       	mov	r10, r24
 41e:	a8 18       	sub	r10, r8
 420:	44 c0       	rjmp	.+136    	; 0x4aa <vfprintf+0x290>
 422:	85 37       	cpi	r24, 0x75	; 117
 424:	29 f4       	brne	.+10     	; 0x430 <vfprintf+0x216>
 426:	2f 7e       	andi	r18, 0xEF	; 239
 428:	b2 2e       	mov	r11, r18
 42a:	2a e0       	ldi	r18, 0x0A	; 10
 42c:	30 e0       	ldi	r19, 0x00	; 0
 42e:	25 c0       	rjmp	.+74     	; 0x47a <vfprintf+0x260>
 430:	f2 2f       	mov	r31, r18
 432:	f9 7f       	andi	r31, 0xF9	; 249
 434:	bf 2e       	mov	r11, r31
 436:	8f 36       	cpi	r24, 0x6F	; 111
 438:	c1 f0       	breq	.+48     	; 0x46a <vfprintf+0x250>
 43a:	18 f4       	brcc	.+6      	; 0x442 <vfprintf+0x228>
 43c:	88 35       	cpi	r24, 0x58	; 88
 43e:	79 f0       	breq	.+30     	; 0x45e <vfprintf+0x244>
 440:	b4 c0       	rjmp	.+360    	; 0x5aa <vfprintf+0x390>
 442:	80 37       	cpi	r24, 0x70	; 112
 444:	19 f0       	breq	.+6      	; 0x44c <vfprintf+0x232>
 446:	88 37       	cpi	r24, 0x78	; 120
 448:	21 f0       	breq	.+8      	; 0x452 <vfprintf+0x238>
 44a:	af c0       	rjmp	.+350    	; 0x5aa <vfprintf+0x390>
 44c:	2f 2f       	mov	r18, r31
 44e:	20 61       	ori	r18, 0x10	; 16
 450:	b2 2e       	mov	r11, r18
 452:	b4 fe       	sbrs	r11, 4
 454:	0d c0       	rjmp	.+26     	; 0x470 <vfprintf+0x256>
 456:	8b 2d       	mov	r24, r11
 458:	84 60       	ori	r24, 0x04	; 4
 45a:	b8 2e       	mov	r11, r24
 45c:	09 c0       	rjmp	.+18     	; 0x470 <vfprintf+0x256>
 45e:	24 ff       	sbrs	r18, 4
 460:	0a c0       	rjmp	.+20     	; 0x476 <vfprintf+0x25c>
 462:	9f 2f       	mov	r25, r31
 464:	96 60       	ori	r25, 0x06	; 6
 466:	b9 2e       	mov	r11, r25
 468:	06 c0       	rjmp	.+12     	; 0x476 <vfprintf+0x25c>
 46a:	28 e0       	ldi	r18, 0x08	; 8
 46c:	30 e0       	ldi	r19, 0x00	; 0
 46e:	05 c0       	rjmp	.+10     	; 0x47a <vfprintf+0x260>
 470:	20 e1       	ldi	r18, 0x10	; 16
 472:	30 e0       	ldi	r19, 0x00	; 0
 474:	02 c0       	rjmp	.+4      	; 0x47a <vfprintf+0x260>
 476:	20 e1       	ldi	r18, 0x10	; 16
 478:	32 e0       	ldi	r19, 0x02	; 2
 47a:	f8 01       	movw	r30, r16
 47c:	b7 fe       	sbrs	r11, 7
 47e:	07 c0       	rjmp	.+14     	; 0x48e <vfprintf+0x274>
 480:	60 81       	ld	r22, Z
 482:	71 81       	ldd	r23, Z+1	; 0x01
 484:	82 81       	ldd	r24, Z+2	; 0x02
 486:	93 81       	ldd	r25, Z+3	; 0x03
 488:	0c 5f       	subi	r16, 0xFC	; 252
 48a:	1f 4f       	sbci	r17, 0xFF	; 255
 48c:	06 c0       	rjmp	.+12     	; 0x49a <vfprintf+0x280>
 48e:	60 81       	ld	r22, Z
 490:	71 81       	ldd	r23, Z+1	; 0x01
 492:	80 e0       	ldi	r24, 0x00	; 0
 494:	90 e0       	ldi	r25, 0x00	; 0
 496:	0e 5f       	subi	r16, 0xFE	; 254
 498:	1f 4f       	sbci	r17, 0xFF	; 255
 49a:	a4 01       	movw	r20, r8
 49c:	0e 94 27 03 	call	0x64e	; 0x64e <__ultoa_invert>
 4a0:	a8 2e       	mov	r10, r24
 4a2:	a8 18       	sub	r10, r8
 4a4:	fb 2d       	mov	r31, r11
 4a6:	ff 77       	andi	r31, 0x7F	; 127
 4a8:	bf 2e       	mov	r11, r31
 4aa:	b6 fe       	sbrs	r11, 6
 4ac:	0b c0       	rjmp	.+22     	; 0x4c4 <vfprintf+0x2aa>
 4ae:	2b 2d       	mov	r18, r11
 4b0:	2e 7f       	andi	r18, 0xFE	; 254
 4b2:	a5 14       	cp	r10, r5
 4b4:	50 f4       	brcc	.+20     	; 0x4ca <vfprintf+0x2b0>
 4b6:	b4 fe       	sbrs	r11, 4
 4b8:	0a c0       	rjmp	.+20     	; 0x4ce <vfprintf+0x2b4>
 4ba:	b2 fc       	sbrc	r11, 2
 4bc:	08 c0       	rjmp	.+16     	; 0x4ce <vfprintf+0x2b4>
 4be:	2b 2d       	mov	r18, r11
 4c0:	2e 7e       	andi	r18, 0xEE	; 238
 4c2:	05 c0       	rjmp	.+10     	; 0x4ce <vfprintf+0x2b4>
 4c4:	7a 2c       	mov	r7, r10
 4c6:	2b 2d       	mov	r18, r11
 4c8:	03 c0       	rjmp	.+6      	; 0x4d0 <vfprintf+0x2b6>
 4ca:	7a 2c       	mov	r7, r10
 4cc:	01 c0       	rjmp	.+2      	; 0x4d0 <vfprintf+0x2b6>
 4ce:	75 2c       	mov	r7, r5
 4d0:	24 ff       	sbrs	r18, 4
 4d2:	0d c0       	rjmp	.+26     	; 0x4ee <vfprintf+0x2d4>
 4d4:	fe 01       	movw	r30, r28
 4d6:	ea 0d       	add	r30, r10
 4d8:	f1 1d       	adc	r31, r1
 4da:	80 81       	ld	r24, Z
 4dc:	80 33       	cpi	r24, 0x30	; 48
 4de:	11 f4       	brne	.+4      	; 0x4e4 <vfprintf+0x2ca>
 4e0:	29 7e       	andi	r18, 0xE9	; 233
 4e2:	09 c0       	rjmp	.+18     	; 0x4f6 <vfprintf+0x2dc>
 4e4:	22 ff       	sbrs	r18, 2
 4e6:	06 c0       	rjmp	.+12     	; 0x4f4 <vfprintf+0x2da>
 4e8:	73 94       	inc	r7
 4ea:	73 94       	inc	r7
 4ec:	04 c0       	rjmp	.+8      	; 0x4f6 <vfprintf+0x2dc>
 4ee:	82 2f       	mov	r24, r18
 4f0:	86 78       	andi	r24, 0x86	; 134
 4f2:	09 f0       	breq	.+2      	; 0x4f6 <vfprintf+0x2dc>
 4f4:	73 94       	inc	r7
 4f6:	23 fd       	sbrc	r18, 3
 4f8:	13 c0       	rjmp	.+38     	; 0x520 <vfprintf+0x306>
 4fa:	20 ff       	sbrs	r18, 0
 4fc:	06 c0       	rjmp	.+12     	; 0x50a <vfprintf+0x2f0>
 4fe:	5a 2c       	mov	r5, r10
 500:	73 14       	cp	r7, r3
 502:	18 f4       	brcc	.+6      	; 0x50a <vfprintf+0x2f0>
 504:	53 0c       	add	r5, r3
 506:	57 18       	sub	r5, r7
 508:	73 2c       	mov	r7, r3
 50a:	73 14       	cp	r7, r3
 50c:	68 f4       	brcc	.+26     	; 0x528 <vfprintf+0x30e>
 50e:	b7 01       	movw	r22, r14
 510:	80 e2       	ldi	r24, 0x20	; 32
 512:	90 e0       	ldi	r25, 0x00	; 0
 514:	2c 87       	std	Y+12, r18	; 0x0c
 516:	0e 94 f5 02 	call	0x5ea	; 0x5ea <fputc>
 51a:	73 94       	inc	r7
 51c:	2c 85       	ldd	r18, Y+12	; 0x0c
 51e:	f5 cf       	rjmp	.-22     	; 0x50a <vfprintf+0x2f0>
 520:	73 14       	cp	r7, r3
 522:	10 f4       	brcc	.+4      	; 0x528 <vfprintf+0x30e>
 524:	37 18       	sub	r3, r7
 526:	01 c0       	rjmp	.+2      	; 0x52a <vfprintf+0x310>
 528:	31 2c       	mov	r3, r1
 52a:	24 ff       	sbrs	r18, 4
 52c:	12 c0       	rjmp	.+36     	; 0x552 <vfprintf+0x338>
 52e:	b7 01       	movw	r22, r14
 530:	80 e3       	ldi	r24, 0x30	; 48
 532:	90 e0       	ldi	r25, 0x00	; 0
 534:	2c 87       	std	Y+12, r18	; 0x0c
 536:	0e 94 f5 02 	call	0x5ea	; 0x5ea <fputc>
 53a:	2c 85       	ldd	r18, Y+12	; 0x0c
 53c:	22 ff       	sbrs	r18, 2
 53e:	17 c0       	rjmp	.+46     	; 0x56e <vfprintf+0x354>
 540:	21 ff       	sbrs	r18, 1
 542:	03 c0       	rjmp	.+6      	; 0x54a <vfprintf+0x330>
 544:	88 e5       	ldi	r24, 0x58	; 88
 546:	90 e0       	ldi	r25, 0x00	; 0
 548:	02 c0       	rjmp	.+4      	; 0x54e <vfprintf+0x334>
 54a:	88 e7       	ldi	r24, 0x78	; 120
 54c:	90 e0       	ldi	r25, 0x00	; 0
 54e:	b7 01       	movw	r22, r14
 550:	0c c0       	rjmp	.+24     	; 0x56a <vfprintf+0x350>
 552:	82 2f       	mov	r24, r18
 554:	86 78       	andi	r24, 0x86	; 134
 556:	59 f0       	breq	.+22     	; 0x56e <vfprintf+0x354>
 558:	21 fd       	sbrc	r18, 1
 55a:	02 c0       	rjmp	.+4      	; 0x560 <vfprintf+0x346>
 55c:	80 e2       	ldi	r24, 0x20	; 32
 55e:	01 c0       	rjmp	.+2      	; 0x562 <vfprintf+0x348>
 560:	8b e2       	ldi	r24, 0x2B	; 43
 562:	27 fd       	sbrc	r18, 7
 564:	8d e2       	ldi	r24, 0x2D	; 45
 566:	b7 01       	movw	r22, r14
 568:	90 e0       	ldi	r25, 0x00	; 0
 56a:	0e 94 f5 02 	call	0x5ea	; 0x5ea <fputc>
 56e:	a5 14       	cp	r10, r5
 570:	38 f4       	brcc	.+14     	; 0x580 <vfprintf+0x366>
 572:	b7 01       	movw	r22, r14
 574:	80 e3       	ldi	r24, 0x30	; 48
 576:	90 e0       	ldi	r25, 0x00	; 0
 578:	0e 94 f5 02 	call	0x5ea	; 0x5ea <fputc>
 57c:	5a 94       	dec	r5
 57e:	f7 cf       	rjmp	.-18     	; 0x56e <vfprintf+0x354>
 580:	aa 94       	dec	r10
 582:	f4 01       	movw	r30, r8
 584:	ea 0d       	add	r30, r10
 586:	f1 1d       	adc	r31, r1
 588:	80 81       	ld	r24, Z
 58a:	b7 01       	movw	r22, r14
 58c:	90 e0       	ldi	r25, 0x00	; 0
 58e:	0e 94 f5 02 	call	0x5ea	; 0x5ea <fputc>
 592:	a1 10       	cpse	r10, r1
 594:	f5 cf       	rjmp	.-22     	; 0x580 <vfprintf+0x366>
 596:	33 20       	and	r3, r3
 598:	09 f4       	brne	.+2      	; 0x59c <vfprintf+0x382>
 59a:	51 ce       	rjmp	.-862    	; 0x23e <vfprintf+0x24>
 59c:	b7 01       	movw	r22, r14
 59e:	80 e2       	ldi	r24, 0x20	; 32
 5a0:	90 e0       	ldi	r25, 0x00	; 0
 5a2:	0e 94 f5 02 	call	0x5ea	; 0x5ea <fputc>
 5a6:	3a 94       	dec	r3
 5a8:	f6 cf       	rjmp	.-20     	; 0x596 <vfprintf+0x37c>
 5aa:	f7 01       	movw	r30, r14
 5ac:	86 81       	ldd	r24, Z+6	; 0x06
 5ae:	97 81       	ldd	r25, Z+7	; 0x07
 5b0:	02 c0       	rjmp	.+4      	; 0x5b6 <vfprintf+0x39c>
 5b2:	8f ef       	ldi	r24, 0xFF	; 255
 5b4:	9f ef       	ldi	r25, 0xFF	; 255
 5b6:	2c 96       	adiw	r28, 0x0c	; 12
 5b8:	e2 e1       	ldi	r30, 0x12	; 18
 5ba:	0c 94 a1 03 	jmp	0x742	; 0x742 <__epilogue_restores__>

000005be <strnlen_P>:
 5be:	fc 01       	movw	r30, r24
 5c0:	05 90       	lpm	r0, Z+
 5c2:	61 50       	subi	r22, 0x01	; 1
 5c4:	70 40       	sbci	r23, 0x00	; 0
 5c6:	01 10       	cpse	r0, r1
 5c8:	d8 f7       	brcc	.-10     	; 0x5c0 <strnlen_P+0x2>
 5ca:	80 95       	com	r24
 5cc:	90 95       	com	r25
 5ce:	8e 0f       	add	r24, r30
 5d0:	9f 1f       	adc	r25, r31
 5d2:	08 95       	ret

000005d4 <strnlen>:
 5d4:	fc 01       	movw	r30, r24
 5d6:	61 50       	subi	r22, 0x01	; 1
 5d8:	70 40       	sbci	r23, 0x00	; 0
 5da:	01 90       	ld	r0, Z+
 5dc:	01 10       	cpse	r0, r1
 5de:	d8 f7       	brcc	.-10     	; 0x5d6 <strnlen+0x2>
 5e0:	80 95       	com	r24
 5e2:	90 95       	com	r25
 5e4:	8e 0f       	add	r24, r30
 5e6:	9f 1f       	adc	r25, r31
 5e8:	08 95       	ret

000005ea <fputc>:
 5ea:	0f 93       	push	r16
 5ec:	1f 93       	push	r17
 5ee:	cf 93       	push	r28
 5f0:	df 93       	push	r29
 5f2:	18 2f       	mov	r17, r24
 5f4:	09 2f       	mov	r16, r25
 5f6:	eb 01       	movw	r28, r22
 5f8:	8b 81       	ldd	r24, Y+3	; 0x03
 5fa:	81 fd       	sbrc	r24, 1
 5fc:	03 c0       	rjmp	.+6      	; 0x604 <fputc+0x1a>
 5fe:	8f ef       	ldi	r24, 0xFF	; 255
 600:	9f ef       	ldi	r25, 0xFF	; 255
 602:	20 c0       	rjmp	.+64     	; 0x644 <fputc+0x5a>
 604:	82 ff       	sbrs	r24, 2
 606:	10 c0       	rjmp	.+32     	; 0x628 <fputc+0x3e>
 608:	4e 81       	ldd	r20, Y+6	; 0x06
 60a:	5f 81       	ldd	r21, Y+7	; 0x07
 60c:	2c 81       	ldd	r18, Y+4	; 0x04
 60e:	3d 81       	ldd	r19, Y+5	; 0x05
 610:	42 17       	cp	r20, r18
 612:	53 07       	cpc	r21, r19
 614:	7c f4       	brge	.+30     	; 0x634 <fputc+0x4a>
 616:	e8 81       	ld	r30, Y
 618:	f9 81       	ldd	r31, Y+1	; 0x01
 61a:	9f 01       	movw	r18, r30
 61c:	2f 5f       	subi	r18, 0xFF	; 255
 61e:	3f 4f       	sbci	r19, 0xFF	; 255
 620:	39 83       	std	Y+1, r19	; 0x01
 622:	28 83       	st	Y, r18
 624:	10 83       	st	Z, r17
 626:	06 c0       	rjmp	.+12     	; 0x634 <fputc+0x4a>
 628:	e8 85       	ldd	r30, Y+8	; 0x08
 62a:	f9 85       	ldd	r31, Y+9	; 0x09
 62c:	81 2f       	mov	r24, r17
 62e:	09 95       	icall
 630:	89 2b       	or	r24, r25
 632:	29 f7       	brne	.-54     	; 0x5fe <fputc+0x14>
 634:	2e 81       	ldd	r18, Y+6	; 0x06
 636:	3f 81       	ldd	r19, Y+7	; 0x07
 638:	2f 5f       	subi	r18, 0xFF	; 255
 63a:	3f 4f       	sbci	r19, 0xFF	; 255
 63c:	3f 83       	std	Y+7, r19	; 0x07
 63e:	2e 83       	std	Y+6, r18	; 0x06
 640:	81 2f       	mov	r24, r17
 642:	90 2f       	mov	r25, r16
 644:	df 91       	pop	r29
 646:	cf 91       	pop	r28
 648:	1f 91       	pop	r17
 64a:	0f 91       	pop	r16
 64c:	08 95       	ret

0000064e <__ultoa_invert>:
 64e:	fa 01       	movw	r30, r20
 650:	aa 27       	eor	r26, r26
 652:	28 30       	cpi	r18, 0x08	; 8
 654:	51 f1       	breq	.+84     	; 0x6aa <__ultoa_invert+0x5c>
 656:	20 31       	cpi	r18, 0x10	; 16
 658:	81 f1       	breq	.+96     	; 0x6ba <__ultoa_invert+0x6c>
 65a:	e8 94       	clt
 65c:	6f 93       	push	r22
 65e:	6e 7f       	andi	r22, 0xFE	; 254
 660:	6e 5f       	subi	r22, 0xFE	; 254
 662:	7f 4f       	sbci	r23, 0xFF	; 255
 664:	8f 4f       	sbci	r24, 0xFF	; 255
 666:	9f 4f       	sbci	r25, 0xFF	; 255
 668:	af 4f       	sbci	r26, 0xFF	; 255
 66a:	b1 e0       	ldi	r27, 0x01	; 1
 66c:	3e d0       	rcall	.+124    	; 0x6ea <__ultoa_invert+0x9c>
 66e:	b4 e0       	ldi	r27, 0x04	; 4
 670:	3c d0       	rcall	.+120    	; 0x6ea <__ultoa_invert+0x9c>
 672:	67 0f       	add	r22, r23
 674:	78 1f       	adc	r23, r24
 676:	89 1f       	adc	r24, r25
 678:	9a 1f       	adc	r25, r26
 67a:	a1 1d       	adc	r26, r1
 67c:	68 0f       	add	r22, r24
 67e:	79 1f       	adc	r23, r25
 680:	8a 1f       	adc	r24, r26
 682:	91 1d       	adc	r25, r1
 684:	a1 1d       	adc	r26, r1
 686:	6a 0f       	add	r22, r26
 688:	71 1d       	adc	r23, r1
 68a:	81 1d       	adc	r24, r1
 68c:	91 1d       	adc	r25, r1
 68e:	a1 1d       	adc	r26, r1
 690:	20 d0       	rcall	.+64     	; 0x6d2 <__ultoa_invert+0x84>
 692:	09 f4       	brne	.+2      	; 0x696 <__ultoa_invert+0x48>
 694:	68 94       	set
 696:	3f 91       	pop	r19
 698:	2a e0       	ldi	r18, 0x0A	; 10
 69a:	26 9f       	mul	r18, r22
 69c:	11 24       	eor	r1, r1
 69e:	30 19       	sub	r19, r0
 6a0:	30 5d       	subi	r19, 0xD0	; 208
 6a2:	31 93       	st	Z+, r19
 6a4:	de f6       	brtc	.-74     	; 0x65c <__ultoa_invert+0xe>
 6a6:	cf 01       	movw	r24, r30
 6a8:	08 95       	ret
 6aa:	46 2f       	mov	r20, r22
 6ac:	47 70       	andi	r20, 0x07	; 7
 6ae:	40 5d       	subi	r20, 0xD0	; 208
 6b0:	41 93       	st	Z+, r20
 6b2:	b3 e0       	ldi	r27, 0x03	; 3
 6b4:	0f d0       	rcall	.+30     	; 0x6d4 <__ultoa_invert+0x86>
 6b6:	c9 f7       	brne	.-14     	; 0x6aa <__ultoa_invert+0x5c>
 6b8:	f6 cf       	rjmp	.-20     	; 0x6a6 <__ultoa_invert+0x58>
 6ba:	46 2f       	mov	r20, r22
 6bc:	4f 70       	andi	r20, 0x0F	; 15
 6be:	40 5d       	subi	r20, 0xD0	; 208
 6c0:	4a 33       	cpi	r20, 0x3A	; 58
 6c2:	18 f0       	brcs	.+6      	; 0x6ca <__ultoa_invert+0x7c>
 6c4:	49 5d       	subi	r20, 0xD9	; 217
 6c6:	31 fd       	sbrc	r19, 1
 6c8:	40 52       	subi	r20, 0x20	; 32
 6ca:	41 93       	st	Z+, r20
 6cc:	02 d0       	rcall	.+4      	; 0x6d2 <__ultoa_invert+0x84>
 6ce:	a9 f7       	brne	.-22     	; 0x6ba <__ultoa_invert+0x6c>
 6d0:	ea cf       	rjmp	.-44     	; 0x6a6 <__ultoa_invert+0x58>
 6d2:	b4 e0       	ldi	r27, 0x04	; 4
 6d4:	a6 95       	lsr	r26
 6d6:	97 95       	ror	r25
 6d8:	87 95       	ror	r24
 6da:	77 95       	ror	r23
 6dc:	67 95       	ror	r22
 6de:	ba 95       	dec	r27
 6e0:	c9 f7       	brne	.-14     	; 0x6d4 <__ultoa_invert+0x86>
 6e2:	00 97       	sbiw	r24, 0x00	; 0
 6e4:	61 05       	cpc	r22, r1
 6e6:	71 05       	cpc	r23, r1
 6e8:	08 95       	ret
 6ea:	9b 01       	movw	r18, r22
 6ec:	ac 01       	movw	r20, r24
 6ee:	0a 2e       	mov	r0, r26
 6f0:	06 94       	lsr	r0
 6f2:	57 95       	ror	r21
 6f4:	47 95       	ror	r20
 6f6:	37 95       	ror	r19
 6f8:	27 95       	ror	r18
 6fa:	ba 95       	dec	r27
 6fc:	c9 f7       	brne	.-14     	; 0x6f0 <__ultoa_invert+0xa2>
 6fe:	62 0f       	add	r22, r18
 700:	73 1f       	adc	r23, r19
 702:	84 1f       	adc	r24, r20
 704:	95 1f       	adc	r25, r21
 706:	a0 1d       	adc	r26, r0
 708:	08 95       	ret

0000070a <__prologue_saves__>:
 70a:	2f 92       	push	r2
 70c:	3f 92       	push	r3
 70e:	4f 92       	push	r4
 710:	5f 92       	push	r5
 712:	6f 92       	push	r6
 714:	7f 92       	push	r7
 716:	8f 92       	push	r8
 718:	9f 92       	push	r9
 71a:	af 92       	push	r10
 71c:	bf 92       	push	r11
 71e:	cf 92       	push	r12
 720:	df 92       	push	r13
 722:	ef 92       	push	r14
 724:	ff 92       	push	r15
 726:	0f 93       	push	r16
 728:	1f 93       	push	r17
 72a:	cf 93       	push	r28
 72c:	df 93       	push	r29
 72e:	cd b7       	in	r28, 0x3d	; 61
 730:	de b7       	in	r29, 0x3e	; 62
 732:	ca 1b       	sub	r28, r26
 734:	db 0b       	sbc	r29, r27
 736:	0f b6       	in	r0, 0x3f	; 63
 738:	f8 94       	cli
 73a:	de bf       	out	0x3e, r29	; 62
 73c:	0f be       	out	0x3f, r0	; 63
 73e:	cd bf       	out	0x3d, r28	; 61
 740:	09 94       	ijmp

00000742 <__epilogue_restores__>:
 742:	2a 88       	ldd	r2, Y+18	; 0x12
 744:	39 88       	ldd	r3, Y+17	; 0x11
 746:	48 88       	ldd	r4, Y+16	; 0x10
 748:	5f 84       	ldd	r5, Y+15	; 0x0f
 74a:	6e 84       	ldd	r6, Y+14	; 0x0e
 74c:	7d 84       	ldd	r7, Y+13	; 0x0d
 74e:	8c 84       	ldd	r8, Y+12	; 0x0c
 750:	9b 84       	ldd	r9, Y+11	; 0x0b
 752:	aa 84       	ldd	r10, Y+10	; 0x0a
 754:	b9 84       	ldd	r11, Y+9	; 0x09
 756:	c8 84       	ldd	r12, Y+8	; 0x08
 758:	df 80       	ldd	r13, Y+7	; 0x07
 75a:	ee 80       	ldd	r14, Y+6	; 0x06
 75c:	fd 80       	ldd	r15, Y+5	; 0x05
 75e:	0c 81       	ldd	r16, Y+4	; 0x04
 760:	1b 81       	ldd	r17, Y+3	; 0x03
 762:	aa 81       	ldd	r26, Y+2	; 0x02
 764:	b9 81       	ldd	r27, Y+1	; 0x01
 766:	ce 0f       	add	r28, r30
 768:	d1 1d       	adc	r29, r1
 76a:	0f b6       	in	r0, 0x3f	; 63
 76c:	f8 94       	cli
 76e:	de bf       	out	0x3e, r29	; 62
 770:	0f be       	out	0x3f, r0	; 63
 772:	cd bf       	out	0x3d, r28	; 61
 774:	ed 01       	movw	r28, r26
 776:	08 95       	ret

00000778 <_exit>:
 778:	f8 94       	cli

0000077a <__stop_program>:
 77a:	ff cf       	rjmp	.-2      	; 0x77a <__stop_program>
